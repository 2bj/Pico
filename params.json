{"note":"Don't delete this file! It's used internally to help with page regeneration.","name":"Pico","google":"","tagline":"Pico is a stupidly simple, blazing fast, flat file CMS.","body":"Creating Content\r\n----------------\r\n\r\nPico is a flat file CMS, this means there is no administration backend and database to deal with. You simply create `.txt` files in the \"content\"\r\nfolder and that becomes a page. For example this file is called `index.txt` and is shown as the main landing page. \r\n\r\nIf you created folder within the content folder (e.g. `content/sub`) and put an `index.txt` inside it, you can access that folder at the URL \r\n`http://yousite.com/sub`. If you want another page within the sub folder, simply create a text file with the corresponding name (e.g. `content/sub/page.txt`)\r\nand will be able to access it from the URL `http://yousite.com/sub/page`. Below we've shown some examples of content locations and their corresponing URL's:\r\n\r\n<table>\r\n\t<thead>\r\n\t\t<tr><th>Physical Location</th><th>URL</th></tr>\r\n\t</thead>\r\n\t<tbody>\r\n\t\t<tr><td>content/index.txt</td><td>/</td></tr>\r\n\t\t<tr><td>content/sub.txt</td><td>/sub</td></tr>\r\n\t\t<tr><td>content/sub/index.txt</td><td>/sub (same as above)</td></tr>\r\n\t\t<tr><td>content/sub/page.txt</td><td>/sub/page</td></tr>\r\n\t\t<tr><td>content/a/very/long/url.txt</td><td>/a/very/long/url</td></tr>\r\n\t</tbody>\r\n</table>\r\n\r\nIf a file cannot be found, the file `content/404.txt` will be shown.\r\n\r\nText File Markup\r\n----------------\r\n\r\nText files are marked up using [Markdown](http://daringfireball.net/projects/markdown/syntax). They can also contain regular HTML.\r\n\r\nAt the top of text files you can place a block comment and specify certain attributes of the page. For example:\r\n\r\n\t/*\r\n\tTitle: Welcome\r\n\tDescription: This description will go in the meta description tag\r\n\tRobots: noindex,nofollow\r\n\t*/\r\n\r\nThese values will be contained in the `{{ meta }}` variable in themes (see below).\r\n\r\nThere are also certain variables that you can use in your text files:\r\n\r\n* &#37;base_url&#37; - The URL to your Pico site\r\n\r\nThemes\r\n------\r\n\r\nYou can create themes for your Pico installation and in the \"themes\" folder. Check out the default theme for an example of a theme. Pico uses\r\n[Twig](http://twig.sensiolabs.org/documentation) for it's templating engine. You can select your theme by setting the `$config['theme']` variable\r\nin config.php to your theme folder.\r\n\r\nAll themes must include an `index.html` file to define the HTML structure of the theme. Below are the Twig variables that are available to use in your theme:\r\n\r\n* `{{ config }}` - Conatins the values you set in config.php (e.g. `{{ config.theme }}` = \"default\")\r\n* `{{ base_dir }}` - The path to your Pico root directory\r\n* `{{ base_url }}` - The URL to your Pico site\r\n* `{{ theme_dir }}` - The path to the Pico active theme direcotry\r\n* `{{ theme_url }}` - The URL to the Pico active theme direcotry\r\n* `{{ site_title }}` - Shortcut to the site title (defined in config.php)\r\n* `{{ meta }}` - Contains the meta values from the current page (e.g. `{{ meta.title }}`, `{{ meta.description }}`, `{{ meta.robots }}`)\r\n* `{{ content }}` - The content of the current page (after it has been processed through Markdown)\r\n\r\nConfig\r\n------\r\n\r\nYou can override the default Pico settings (and add your own custom settings) by editing config.php in the root Pico directory. The config.php file\r\nlist all of the settings and their defaults. To override a setting simply uncomment it in config.php and set your custom value."}